Outlines:
	▪ Spawning
	▪ Enemy
	▪ Protag
	▪ Leveling
	▪ Modifier

Movement:
	✓ Chasing
	✓ Spacing
Enemy:
	▪ Stats:
		▪ Cooldown
		▪ Cost
		✓ Speed
		✓ Firerate
		▪ Damage
		▪ Exp Drop
	▪ Attacks:
		✓ Attacking when get in range
		✓ Firing - firing projectile in array of vector.
		▪ Slash - melee attack in an hitbox.
		▪ Detonate - explode when get in certain range of protag.
	▪ List:
		✓ 1. Missile - track and explode.
		✓ 2. Flock - fast moving and melee attack.
		✓ 3. Turret - fire bullet but fragile.
		✓ 4. Dog - fast and deadly with decent health
		✓ 5. Archer - long range attack.
		✓ 6. Zombie - slow moving but high health.
		▪ 7. Rusher - increase moving speed of nearby enemy. @consider
		✓ 8. Gunner - Using an pistol.
		✓ 9. Predator - faster tracking and bigger explode.
		✓ 10. Shielder - High health but slow moving.
		▪ 11. Doctor - heal lowest health enemy in radius. @consider
		▪ 12. Assasin - hidden and appear when in melee range. @consider
		✓ 13. Pack - Pack of 3 dog.
		▪ 14. Enrage - Massively increase move speed of nearby enemy. @consider
		▪ 15. Healer - heal every enemy in an radius. @consider
		✓ 16. Brute - strong and tanky.
Spawn:
	▪ Gain cash overtime (income).
	▪ Have an max capacity of cash.
	▪ Spending when spawning enemy.
	▪ Have 10 slot?
	▪ Able to buy new slot max at 10.
	▪ Select spawn slot when press it key.
	▪ Can re-bind each slot key but default are 1 -> 0.
	▪ Spawn selected when press on spawn zon.
Modifiers:
	▪ Level up to choose modifiers.
	▪ 3 option each option will upgrade both the enemy and protag.
	Types:
		▪ Random enemy in slot buff random stat - Protag buff random stat
		▪ Hire an new enemy/Replace an enemy - Get an new weapon/Random stat buff
		▪ Increase cash capacity/income - Increase medkit regen speed
Protagonist:
	▪ Attack enemy that aiming at it.
	▪ Switch to fast weapon to clear alot of weak enemy.
	▪ Dodging bullet.
	▪ Using medkit when needed.
	▪ Medkit recharge overtime.
	▪ Stomp the floor when free.
	▪ Display it GUI.
	State:
		...
General:
	▪ Health system.
	✓ Object pooling.